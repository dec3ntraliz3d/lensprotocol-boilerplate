/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  BaseContract,
  BigNumber,
  BigNumberish,
  BytesLike,
  CallOverrides,
  ContractTransaction,
  Overrides,
  PopulatedTransaction,
  Signer,
  utils,
} from "ethers";
import { FunctionFragment, Result } from "@ethersproject/abi";
import { Listener, Provider } from "@ethersproject/providers";
import { TypedEventFilter, TypedEvent, TypedListener, OnEvent } from "./common";

export declare namespace DataTypes {
  export type EIP712SignatureStruct = {
    v: BigNumberish;
    r: BytesLike;
    s: BytesLike;
    deadline: BigNumberish;
  };

  export type EIP712SignatureStructOutput = [
    number,
    string,
    string,
    BigNumber
  ] & { v: number; r: string; s: string; deadline: BigNumber };

  export type CollectWithSigDataStruct = {
    collector: string;
    profileId: BigNumberish;
    pubId: BigNumberish;
    data: BytesLike;
    sig: DataTypes.EIP712SignatureStruct;
  };

  export type CollectWithSigDataStructOutput = [
    string,
    BigNumber,
    BigNumber,
    string,
    DataTypes.EIP712SignatureStructOutput
  ] & {
    collector: string;
    profileId: BigNumber;
    pubId: BigNumber;
    data: string;
    sig: DataTypes.EIP712SignatureStructOutput;
  };

  export type CommentDataStruct = {
    profileId: BigNumberish;
    contentURI: string;
    profileIdPointed: BigNumberish;
    pubIdPointed: BigNumberish;
    collectModule: string;
    collectModuleData: BytesLike;
    referenceModule: string;
    referenceModuleData: BytesLike;
  };

  export type CommentDataStructOutput = [
    BigNumber,
    string,
    BigNumber,
    BigNumber,
    string,
    string,
    string,
    string
  ] & {
    profileId: BigNumber;
    contentURI: string;
    profileIdPointed: BigNumber;
    pubIdPointed: BigNumber;
    collectModule: string;
    collectModuleData: string;
    referenceModule: string;
    referenceModuleData: string;
  };

  export type CommentWithSigDataStruct = {
    profileId: BigNumberish;
    contentURI: string;
    profileIdPointed: BigNumberish;
    pubIdPointed: BigNumberish;
    collectModule: string;
    collectModuleData: BytesLike;
    referenceModule: string;
    referenceModuleData: BytesLike;
    sig: DataTypes.EIP712SignatureStruct;
  };

  export type CommentWithSigDataStructOutput = [
    BigNumber,
    string,
    BigNumber,
    BigNumber,
    string,
    string,
    string,
    string,
    DataTypes.EIP712SignatureStructOutput
  ] & {
    profileId: BigNumber;
    contentURI: string;
    profileIdPointed: BigNumber;
    pubIdPointed: BigNumber;
    collectModule: string;
    collectModuleData: string;
    referenceModule: string;
    referenceModuleData: string;
    sig: DataTypes.EIP712SignatureStructOutput;
  };

  export type CreateProfileDataStruct = {
    to: string;
    handle: string;
    imageURI: string;
    followModule: string;
    followModuleData: BytesLike;
    followNFTURI: string;
  };

  export type CreateProfileDataStructOutput = [
    string,
    string,
    string,
    string,
    string,
    string
  ] & {
    to: string;
    handle: string;
    imageURI: string;
    followModule: string;
    followModuleData: string;
    followNFTURI: string;
  };

  export type FollowWithSigDataStruct = {
    follower: string;
    profileIds: BigNumberish[];
    datas: BytesLike[];
    sig: DataTypes.EIP712SignatureStruct;
  };

  export type FollowWithSigDataStructOutput = [
    string,
    BigNumber[],
    string[],
    DataTypes.EIP712SignatureStructOutput
  ] & {
    follower: string;
    profileIds: BigNumber[];
    datas: string[];
    sig: DataTypes.EIP712SignatureStructOutput;
  };

  export type ProfileStructStruct = {
    pubCount: BigNumberish;
    followModule: string;
    followNFT: string;
    handle: string;
    imageURI: string;
    followNFTURI: string;
  };

  export type ProfileStructStructOutput = [
    BigNumber,
    string,
    string,
    string,
    string,
    string
  ] & {
    pubCount: BigNumber;
    followModule: string;
    followNFT: string;
    handle: string;
    imageURI: string;
    followNFTURI: string;
  };

  export type PublicationStructStruct = {
    profileIdPointed: BigNumberish;
    pubIdPointed: BigNumberish;
    contentURI: string;
    referenceModule: string;
    collectModule: string;
    collectNFT: string;
  };

  export type PublicationStructStructOutput = [
    BigNumber,
    BigNumber,
    string,
    string,
    string,
    string
  ] & {
    profileIdPointed: BigNumber;
    pubIdPointed: BigNumber;
    contentURI: string;
    referenceModule: string;
    collectModule: string;
    collectNFT: string;
  };

  export type MirrorDataStruct = {
    profileId: BigNumberish;
    profileIdPointed: BigNumberish;
    pubIdPointed: BigNumberish;
    referenceModule: string;
    referenceModuleData: BytesLike;
  };

  export type MirrorDataStructOutput = [
    BigNumber,
    BigNumber,
    BigNumber,
    string,
    string
  ] & {
    profileId: BigNumber;
    profileIdPointed: BigNumber;
    pubIdPointed: BigNumber;
    referenceModule: string;
    referenceModuleData: string;
  };

  export type MirrorWithSigDataStruct = {
    profileId: BigNumberish;
    profileIdPointed: BigNumberish;
    pubIdPointed: BigNumberish;
    referenceModule: string;
    referenceModuleData: BytesLike;
    sig: DataTypes.EIP712SignatureStruct;
  };

  export type MirrorWithSigDataStructOutput = [
    BigNumber,
    BigNumber,
    BigNumber,
    string,
    string,
    DataTypes.EIP712SignatureStructOutput
  ] & {
    profileId: BigNumber;
    profileIdPointed: BigNumber;
    pubIdPointed: BigNumber;
    referenceModule: string;
    referenceModuleData: string;
    sig: DataTypes.EIP712SignatureStructOutput;
  };

  export type PostDataStruct = {
    profileId: BigNumberish;
    contentURI: string;
    collectModule: string;
    collectModuleData: BytesLike;
    referenceModule: string;
    referenceModuleData: BytesLike;
  };

  export type PostDataStructOutput = [
    BigNumber,
    string,
    string,
    string,
    string,
    string
  ] & {
    profileId: BigNumber;
    contentURI: string;
    collectModule: string;
    collectModuleData: string;
    referenceModule: string;
    referenceModuleData: string;
  };

  export type PostWithSigDataStruct = {
    profileId: BigNumberish;
    contentURI: string;
    collectModule: string;
    collectModuleData: BytesLike;
    referenceModule: string;
    referenceModuleData: BytesLike;
    sig: DataTypes.EIP712SignatureStruct;
  };

  export type PostWithSigDataStructOutput = [
    BigNumber,
    string,
    string,
    string,
    string,
    string,
    DataTypes.EIP712SignatureStructOutput
  ] & {
    profileId: BigNumber;
    contentURI: string;
    collectModule: string;
    collectModuleData: string;
    referenceModule: string;
    referenceModuleData: string;
    sig: DataTypes.EIP712SignatureStructOutput;
  };

  export type SetDefaultProfileWithSigDataStruct = {
    wallet: string;
    profileId: BigNumberish;
    sig: DataTypes.EIP712SignatureStruct;
  };

  export type SetDefaultProfileWithSigDataStructOutput = [
    string,
    BigNumber,
    DataTypes.EIP712SignatureStructOutput
  ] & {
    wallet: string;
    profileId: BigNumber;
    sig: DataTypes.EIP712SignatureStructOutput;
  };

  export type SetDispatcherWithSigDataStruct = {
    profileId: BigNumberish;
    dispatcher: string;
    sig: DataTypes.EIP712SignatureStruct;
  };

  export type SetDispatcherWithSigDataStructOutput = [
    BigNumber,
    string,
    DataTypes.EIP712SignatureStructOutput
  ] & {
    profileId: BigNumber;
    dispatcher: string;
    sig: DataTypes.EIP712SignatureStructOutput;
  };

  export type SetFollowModuleWithSigDataStruct = {
    profileId: BigNumberish;
    followModule: string;
    followModuleData: BytesLike;
    sig: DataTypes.EIP712SignatureStruct;
  };

  export type SetFollowModuleWithSigDataStructOutput = [
    BigNumber,
    string,
    string,
    DataTypes.EIP712SignatureStructOutput
  ] & {
    profileId: BigNumber;
    followModule: string;
    followModuleData: string;
    sig: DataTypes.EIP712SignatureStructOutput;
  };

  export type SetFollowNFTURIWithSigDataStruct = {
    profileId: BigNumberish;
    followNFTURI: string;
    sig: DataTypes.EIP712SignatureStruct;
  };

  export type SetFollowNFTURIWithSigDataStructOutput = [
    BigNumber,
    string,
    DataTypes.EIP712SignatureStructOutput
  ] & {
    profileId: BigNumber;
    followNFTURI: string;
    sig: DataTypes.EIP712SignatureStructOutput;
  };

  export type SetProfileImageURIWithSigDataStruct = {
    profileId: BigNumberish;
    imageURI: string;
    sig: DataTypes.EIP712SignatureStruct;
  };

  export type SetProfileImageURIWithSigDataStructOutput = [
    BigNumber,
    string,
    DataTypes.EIP712SignatureStructOutput
  ] & {
    profileId: BigNumber;
    imageURI: string;
    sig: DataTypes.EIP712SignatureStructOutput;
  };
}

export interface ILensHubInterface extends utils.Interface {
  contractName: "ILensHub";
  functions: {
    "collect(uint256,uint256,bytes)": FunctionFragment;
    "collectWithSig((address,uint256,uint256,bytes,(uint8,bytes32,bytes32,uint256)))": FunctionFragment;
    "comment((uint256,string,uint256,uint256,address,bytes,address,bytes))": FunctionFragment;
    "commentWithSig((uint256,string,uint256,uint256,address,bytes,address,bytes,(uint8,bytes32,bytes32,uint256)))": FunctionFragment;
    "createProfile((address,string,string,address,bytes,string))": FunctionFragment;
    "defaultProfile(address)": FunctionFragment;
    "emitCollectNFTTransferEvent(uint256,uint256,uint256,address,address)": FunctionFragment;
    "emitFollowNFTTransferEvent(uint256,uint256,address,address)": FunctionFragment;
    "follow(uint256[],bytes[])": FunctionFragment;
    "followWithSig((address,uint256[],bytes[],(uint8,bytes32,bytes32,uint256)))": FunctionFragment;
    "getCollectModule(uint256,uint256)": FunctionFragment;
    "getCollectNFT(uint256,uint256)": FunctionFragment;
    "getContentURI(uint256,uint256)": FunctionFragment;
    "getDispatcher(uint256)": FunctionFragment;
    "getFollowModule(uint256)": FunctionFragment;
    "getFollowNFT(uint256)": FunctionFragment;
    "getFollowNFTURI(uint256)": FunctionFragment;
    "getGovernance()": FunctionFragment;
    "getHandle(uint256)": FunctionFragment;
    "getProfile(uint256)": FunctionFragment;
    "getProfileIdByHandle(string)": FunctionFragment;
    "getPub(uint256,uint256)": FunctionFragment;
    "getPubCount(uint256)": FunctionFragment;
    "getPubPointer(uint256,uint256)": FunctionFragment;
    "getPubType(uint256,uint256)": FunctionFragment;
    "getReferenceModule(uint256,uint256)": FunctionFragment;
    "initialize(string,string,address)": FunctionFragment;
    "isCollectModuleWhitelisted(address)": FunctionFragment;
    "isFollowModuleWhitelisted(address)": FunctionFragment;
    "isProfileCreatorWhitelisted(address)": FunctionFragment;
    "isReferenceModuleWhitelisted(address)": FunctionFragment;
    "mirror((uint256,uint256,uint256,address,bytes))": FunctionFragment;
    "mirrorWithSig((uint256,uint256,uint256,address,bytes,(uint8,bytes32,bytes32,uint256)))": FunctionFragment;
    "post((uint256,string,address,bytes,address,bytes))": FunctionFragment;
    "postWithSig((uint256,string,address,bytes,address,bytes,(uint8,bytes32,bytes32,uint256)))": FunctionFragment;
    "setDefaultProfile(uint256)": FunctionFragment;
    "setDefaultProfileWithSig((address,uint256,(uint8,bytes32,bytes32,uint256)))": FunctionFragment;
    "setDispatcher(uint256,address)": FunctionFragment;
    "setDispatcherWithSig((uint256,address,(uint8,bytes32,bytes32,uint256)))": FunctionFragment;
    "setEmergencyAdmin(address)": FunctionFragment;
    "setFollowModule(uint256,address,bytes)": FunctionFragment;
    "setFollowModuleWithSig((uint256,address,bytes,(uint8,bytes32,bytes32,uint256)))": FunctionFragment;
    "setFollowNFTURI(uint256,string)": FunctionFragment;
    "setFollowNFTURIWithSig((uint256,string,(uint8,bytes32,bytes32,uint256)))": FunctionFragment;
    "setGovernance(address)": FunctionFragment;
    "setProfileImageURI(uint256,string)": FunctionFragment;
    "setProfileImageURIWithSig((uint256,string,(uint8,bytes32,bytes32,uint256)))": FunctionFragment;
    "setState(uint8)": FunctionFragment;
    "whitelistCollectModule(address,bool)": FunctionFragment;
    "whitelistFollowModule(address,bool)": FunctionFragment;
    "whitelistProfileCreator(address,bool)": FunctionFragment;
    "whitelistReferenceModule(address,bool)": FunctionFragment;
  };

  encodeFunctionData(
    functionFragment: "collect",
    values: [BigNumberish, BigNumberish, BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "collectWithSig",
    values: [DataTypes.CollectWithSigDataStruct]
  ): string;
  encodeFunctionData(
    functionFragment: "comment",
    values: [DataTypes.CommentDataStruct]
  ): string;
  encodeFunctionData(
    functionFragment: "commentWithSig",
    values: [DataTypes.CommentWithSigDataStruct]
  ): string;
  encodeFunctionData(
    functionFragment: "createProfile",
    values: [DataTypes.CreateProfileDataStruct]
  ): string;
  encodeFunctionData(
    functionFragment: "defaultProfile",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "emitCollectNFTTransferEvent",
    values: [BigNumberish, BigNumberish, BigNumberish, string, string]
  ): string;
  encodeFunctionData(
    functionFragment: "emitFollowNFTTransferEvent",
    values: [BigNumberish, BigNumberish, string, string]
  ): string;
  encodeFunctionData(
    functionFragment: "follow",
    values: [BigNumberish[], BytesLike[]]
  ): string;
  encodeFunctionData(
    functionFragment: "followWithSig",
    values: [DataTypes.FollowWithSigDataStruct]
  ): string;
  encodeFunctionData(
    functionFragment: "getCollectModule",
    values: [BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getCollectNFT",
    values: [BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getContentURI",
    values: [BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getDispatcher",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getFollowModule",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getFollowNFT",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getFollowNFTURI",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getGovernance",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getHandle",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getProfile",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getProfileIdByHandle",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "getPub",
    values: [BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getPubCount",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getPubPointer",
    values: [BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getPubType",
    values: [BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getReferenceModule",
    values: [BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "initialize",
    values: [string, string, string]
  ): string;
  encodeFunctionData(
    functionFragment: "isCollectModuleWhitelisted",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "isFollowModuleWhitelisted",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "isProfileCreatorWhitelisted",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "isReferenceModuleWhitelisted",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "mirror",
    values: [DataTypes.MirrorDataStruct]
  ): string;
  encodeFunctionData(
    functionFragment: "mirrorWithSig",
    values: [DataTypes.MirrorWithSigDataStruct]
  ): string;
  encodeFunctionData(
    functionFragment: "post",
    values: [DataTypes.PostDataStruct]
  ): string;
  encodeFunctionData(
    functionFragment: "postWithSig",
    values: [DataTypes.PostWithSigDataStruct]
  ): string;
  encodeFunctionData(
    functionFragment: "setDefaultProfile",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "setDefaultProfileWithSig",
    values: [DataTypes.SetDefaultProfileWithSigDataStruct]
  ): string;
  encodeFunctionData(
    functionFragment: "setDispatcher",
    values: [BigNumberish, string]
  ): string;
  encodeFunctionData(
    functionFragment: "setDispatcherWithSig",
    values: [DataTypes.SetDispatcherWithSigDataStruct]
  ): string;
  encodeFunctionData(
    functionFragment: "setEmergencyAdmin",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "setFollowModule",
    values: [BigNumberish, string, BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "setFollowModuleWithSig",
    values: [DataTypes.SetFollowModuleWithSigDataStruct]
  ): string;
  encodeFunctionData(
    functionFragment: "setFollowNFTURI",
    values: [BigNumberish, string]
  ): string;
  encodeFunctionData(
    functionFragment: "setFollowNFTURIWithSig",
    values: [DataTypes.SetFollowNFTURIWithSigDataStruct]
  ): string;
  encodeFunctionData(
    functionFragment: "setGovernance",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "setProfileImageURI",
    values: [BigNumberish, string]
  ): string;
  encodeFunctionData(
    functionFragment: "setProfileImageURIWithSig",
    values: [DataTypes.SetProfileImageURIWithSigDataStruct]
  ): string;
  encodeFunctionData(
    functionFragment: "setState",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "whitelistCollectModule",
    values: [string, boolean]
  ): string;
  encodeFunctionData(
    functionFragment: "whitelistFollowModule",
    values: [string, boolean]
  ): string;
  encodeFunctionData(
    functionFragment: "whitelistProfileCreator",
    values: [string, boolean]
  ): string;
  encodeFunctionData(
    functionFragment: "whitelistReferenceModule",
    values: [string, boolean]
  ): string;

  decodeFunctionResult(functionFragment: "collect", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "collectWithSig",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "comment", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "commentWithSig",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "createProfile",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "defaultProfile",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "emitCollectNFTTransferEvent",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "emitFollowNFTTransferEvent",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "follow", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "followWithSig",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getCollectModule",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getCollectNFT",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getContentURI",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getDispatcher",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getFollowModule",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getFollowNFT",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getFollowNFTURI",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getGovernance",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "getHandle", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "getProfile", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "getProfileIdByHandle",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "getPub", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "getPubCount",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getPubPointer",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "getPubType", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "getReferenceModule",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "initialize", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "isCollectModuleWhitelisted",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "isFollowModuleWhitelisted",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "isProfileCreatorWhitelisted",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "isReferenceModuleWhitelisted",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "mirror", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "mirrorWithSig",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "post", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "postWithSig",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setDefaultProfile",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setDefaultProfileWithSig",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setDispatcher",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setDispatcherWithSig",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setEmergencyAdmin",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setFollowModule",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setFollowModuleWithSig",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setFollowNFTURI",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setFollowNFTURIWithSig",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setGovernance",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setProfileImageURI",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setProfileImageURIWithSig",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "setState", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "whitelistCollectModule",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "whitelistFollowModule",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "whitelistProfileCreator",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "whitelistReferenceModule",
    data: BytesLike
  ): Result;

  events: {};
}

export interface ILensHub extends BaseContract {
  contractName: "ILensHub";
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: ILensHubInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {
    collect(
      profileId: BigNumberish,
      pubId: BigNumberish,
      data: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    collectWithSig(
      vars: DataTypes.CollectWithSigDataStruct,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    comment(
      vars: DataTypes.CommentDataStruct,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    commentWithSig(
      vars: DataTypes.CommentWithSigDataStruct,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    createProfile(
      vars: DataTypes.CreateProfileDataStruct,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    defaultProfile(
      wallet: string,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    emitCollectNFTTransferEvent(
      profileId: BigNumberish,
      pubId: BigNumberish,
      collectNFTId: BigNumberish,
      from: string,
      to: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    emitFollowNFTTransferEvent(
      profileId: BigNumberish,
      followNFTId: BigNumberish,
      from: string,
      to: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    follow(
      profileIds: BigNumberish[],
      datas: BytesLike[],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    followWithSig(
      vars: DataTypes.FollowWithSigDataStruct,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    getCollectModule(
      profileId: BigNumberish,
      pubId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[string]>;

    getCollectNFT(
      profileId: BigNumberish,
      pubId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[string]>;

    getContentURI(
      profileId: BigNumberish,
      pubId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[string]>;

    getDispatcher(
      profileId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[string]>;

    getFollowModule(
      profileId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[string]>;

    getFollowNFT(
      profileId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[string]>;

    getFollowNFTURI(
      profileId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[string]>;

    getGovernance(overrides?: CallOverrides): Promise<[string]>;

    getHandle(
      profileId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[string]>;

    getProfile(
      profileId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[DataTypes.ProfileStructStructOutput]>;

    getProfileIdByHandle(
      handle: string,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    getPub(
      profileId: BigNumberish,
      pubId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[DataTypes.PublicationStructStructOutput]>;

    getPubCount(
      profileId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    getPubPointer(
      profileId: BigNumberish,
      pubId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber, BigNumber]>;

    getPubType(
      profileId: BigNumberish,
      pubId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[number]>;

    getReferenceModule(
      profileId: BigNumberish,
      pubId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[string]>;

    initialize(
      name: string,
      symbol: string,
      newGovernance: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    isCollectModuleWhitelisted(
      collectModule: string,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    isFollowModuleWhitelisted(
      followModule: string,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    isProfileCreatorWhitelisted(
      profileCreator: string,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    isReferenceModuleWhitelisted(
      referenceModule: string,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    mirror(
      vars: DataTypes.MirrorDataStruct,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    mirrorWithSig(
      vars: DataTypes.MirrorWithSigDataStruct,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    post(
      vars: DataTypes.PostDataStruct,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    postWithSig(
      vars: DataTypes.PostWithSigDataStruct,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    setDefaultProfile(
      profileId: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    setDefaultProfileWithSig(
      vars: DataTypes.SetDefaultProfileWithSigDataStruct,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    setDispatcher(
      profileId: BigNumberish,
      dispatcher: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    setDispatcherWithSig(
      vars: DataTypes.SetDispatcherWithSigDataStruct,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    setEmergencyAdmin(
      newEmergencyAdmin: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    setFollowModule(
      profileId: BigNumberish,
      followModule: string,
      followModuleData: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    setFollowModuleWithSig(
      vars: DataTypes.SetFollowModuleWithSigDataStruct,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    setFollowNFTURI(
      profileId: BigNumberish,
      followNFTURI: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    setFollowNFTURIWithSig(
      vars: DataTypes.SetFollowNFTURIWithSigDataStruct,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    setGovernance(
      newGovernance: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    setProfileImageURI(
      profileId: BigNumberish,
      imageURI: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    setProfileImageURIWithSig(
      vars: DataTypes.SetProfileImageURIWithSigDataStruct,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    setState(
      newState: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    whitelistCollectModule(
      collectModule: string,
      whitelist: boolean,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    whitelistFollowModule(
      followModule: string,
      whitelist: boolean,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    whitelistProfileCreator(
      profileCreator: string,
      whitelist: boolean,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    whitelistReferenceModule(
      referenceModule: string,
      whitelist: boolean,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;
  };

  collect(
    profileId: BigNumberish,
    pubId: BigNumberish,
    data: BytesLike,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  collectWithSig(
    vars: DataTypes.CollectWithSigDataStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  comment(
    vars: DataTypes.CommentDataStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  commentWithSig(
    vars: DataTypes.CommentWithSigDataStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  createProfile(
    vars: DataTypes.CreateProfileDataStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  defaultProfile(wallet: string, overrides?: CallOverrides): Promise<BigNumber>;

  emitCollectNFTTransferEvent(
    profileId: BigNumberish,
    pubId: BigNumberish,
    collectNFTId: BigNumberish,
    from: string,
    to: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  emitFollowNFTTransferEvent(
    profileId: BigNumberish,
    followNFTId: BigNumberish,
    from: string,
    to: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  follow(
    profileIds: BigNumberish[],
    datas: BytesLike[],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  followWithSig(
    vars: DataTypes.FollowWithSigDataStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  getCollectModule(
    profileId: BigNumberish,
    pubId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<string>;

  getCollectNFT(
    profileId: BigNumberish,
    pubId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<string>;

  getContentURI(
    profileId: BigNumberish,
    pubId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<string>;

  getDispatcher(
    profileId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<string>;

  getFollowModule(
    profileId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<string>;

  getFollowNFT(
    profileId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<string>;

  getFollowNFTURI(
    profileId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<string>;

  getGovernance(overrides?: CallOverrides): Promise<string>;

  getHandle(
    profileId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<string>;

  getProfile(
    profileId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<DataTypes.ProfileStructStructOutput>;

  getProfileIdByHandle(
    handle: string,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  getPub(
    profileId: BigNumberish,
    pubId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<DataTypes.PublicationStructStructOutput>;

  getPubCount(
    profileId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  getPubPointer(
    profileId: BigNumberish,
    pubId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<[BigNumber, BigNumber]>;

  getPubType(
    profileId: BigNumberish,
    pubId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<number>;

  getReferenceModule(
    profileId: BigNumberish,
    pubId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<string>;

  initialize(
    name: string,
    symbol: string,
    newGovernance: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  isCollectModuleWhitelisted(
    collectModule: string,
    overrides?: CallOverrides
  ): Promise<boolean>;

  isFollowModuleWhitelisted(
    followModule: string,
    overrides?: CallOverrides
  ): Promise<boolean>;

  isProfileCreatorWhitelisted(
    profileCreator: string,
    overrides?: CallOverrides
  ): Promise<boolean>;

  isReferenceModuleWhitelisted(
    referenceModule: string,
    overrides?: CallOverrides
  ): Promise<boolean>;

  mirror(
    vars: DataTypes.MirrorDataStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  mirrorWithSig(
    vars: DataTypes.MirrorWithSigDataStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  post(
    vars: DataTypes.PostDataStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  postWithSig(
    vars: DataTypes.PostWithSigDataStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  setDefaultProfile(
    profileId: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  setDefaultProfileWithSig(
    vars: DataTypes.SetDefaultProfileWithSigDataStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  setDispatcher(
    profileId: BigNumberish,
    dispatcher: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  setDispatcherWithSig(
    vars: DataTypes.SetDispatcherWithSigDataStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  setEmergencyAdmin(
    newEmergencyAdmin: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  setFollowModule(
    profileId: BigNumberish,
    followModule: string,
    followModuleData: BytesLike,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  setFollowModuleWithSig(
    vars: DataTypes.SetFollowModuleWithSigDataStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  setFollowNFTURI(
    profileId: BigNumberish,
    followNFTURI: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  setFollowNFTURIWithSig(
    vars: DataTypes.SetFollowNFTURIWithSigDataStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  setGovernance(
    newGovernance: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  setProfileImageURI(
    profileId: BigNumberish,
    imageURI: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  setProfileImageURIWithSig(
    vars: DataTypes.SetProfileImageURIWithSigDataStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  setState(
    newState: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  whitelistCollectModule(
    collectModule: string,
    whitelist: boolean,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  whitelistFollowModule(
    followModule: string,
    whitelist: boolean,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  whitelistProfileCreator(
    profileCreator: string,
    whitelist: boolean,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  whitelistReferenceModule(
    referenceModule: string,
    whitelist: boolean,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  callStatic: {
    collect(
      profileId: BigNumberish,
      pubId: BigNumberish,
      data: BytesLike,
      overrides?: CallOverrides
    ): Promise<void>;

    collectWithSig(
      vars: DataTypes.CollectWithSigDataStruct,
      overrides?: CallOverrides
    ): Promise<void>;

    comment(
      vars: DataTypes.CommentDataStruct,
      overrides?: CallOverrides
    ): Promise<void>;

    commentWithSig(
      vars: DataTypes.CommentWithSigDataStruct,
      overrides?: CallOverrides
    ): Promise<void>;

    createProfile(
      vars: DataTypes.CreateProfileDataStruct,
      overrides?: CallOverrides
    ): Promise<void>;

    defaultProfile(
      wallet: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    emitCollectNFTTransferEvent(
      profileId: BigNumberish,
      pubId: BigNumberish,
      collectNFTId: BigNumberish,
      from: string,
      to: string,
      overrides?: CallOverrides
    ): Promise<void>;

    emitFollowNFTTransferEvent(
      profileId: BigNumberish,
      followNFTId: BigNumberish,
      from: string,
      to: string,
      overrides?: CallOverrides
    ): Promise<void>;

    follow(
      profileIds: BigNumberish[],
      datas: BytesLike[],
      overrides?: CallOverrides
    ): Promise<void>;

    followWithSig(
      vars: DataTypes.FollowWithSigDataStruct,
      overrides?: CallOverrides
    ): Promise<void>;

    getCollectModule(
      profileId: BigNumberish,
      pubId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<string>;

    getCollectNFT(
      profileId: BigNumberish,
      pubId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<string>;

    getContentURI(
      profileId: BigNumberish,
      pubId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<string>;

    getDispatcher(
      profileId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<string>;

    getFollowModule(
      profileId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<string>;

    getFollowNFT(
      profileId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<string>;

    getFollowNFTURI(
      profileId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<string>;

    getGovernance(overrides?: CallOverrides): Promise<string>;

    getHandle(
      profileId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<string>;

    getProfile(
      profileId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<DataTypes.ProfileStructStructOutput>;

    getProfileIdByHandle(
      handle: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getPub(
      profileId: BigNumberish,
      pubId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<DataTypes.PublicationStructStructOutput>;

    getPubCount(
      profileId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getPubPointer(
      profileId: BigNumberish,
      pubId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber, BigNumber]>;

    getPubType(
      profileId: BigNumberish,
      pubId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<number>;

    getReferenceModule(
      profileId: BigNumberish,
      pubId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<string>;

    initialize(
      name: string,
      symbol: string,
      newGovernance: string,
      overrides?: CallOverrides
    ): Promise<void>;

    isCollectModuleWhitelisted(
      collectModule: string,
      overrides?: CallOverrides
    ): Promise<boolean>;

    isFollowModuleWhitelisted(
      followModule: string,
      overrides?: CallOverrides
    ): Promise<boolean>;

    isProfileCreatorWhitelisted(
      profileCreator: string,
      overrides?: CallOverrides
    ): Promise<boolean>;

    isReferenceModuleWhitelisted(
      referenceModule: string,
      overrides?: CallOverrides
    ): Promise<boolean>;

    mirror(
      vars: DataTypes.MirrorDataStruct,
      overrides?: CallOverrides
    ): Promise<void>;

    mirrorWithSig(
      vars: DataTypes.MirrorWithSigDataStruct,
      overrides?: CallOverrides
    ): Promise<void>;

    post(
      vars: DataTypes.PostDataStruct,
      overrides?: CallOverrides
    ): Promise<void>;

    postWithSig(
      vars: DataTypes.PostWithSigDataStruct,
      overrides?: CallOverrides
    ): Promise<void>;

    setDefaultProfile(
      profileId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    setDefaultProfileWithSig(
      vars: DataTypes.SetDefaultProfileWithSigDataStruct,
      overrides?: CallOverrides
    ): Promise<void>;

    setDispatcher(
      profileId: BigNumberish,
      dispatcher: string,
      overrides?: CallOverrides
    ): Promise<void>;

    setDispatcherWithSig(
      vars: DataTypes.SetDispatcherWithSigDataStruct,
      overrides?: CallOverrides
    ): Promise<void>;

    setEmergencyAdmin(
      newEmergencyAdmin: string,
      overrides?: CallOverrides
    ): Promise<void>;

    setFollowModule(
      profileId: BigNumberish,
      followModule: string,
      followModuleData: BytesLike,
      overrides?: CallOverrides
    ): Promise<void>;

    setFollowModuleWithSig(
      vars: DataTypes.SetFollowModuleWithSigDataStruct,
      overrides?: CallOverrides
    ): Promise<void>;

    setFollowNFTURI(
      profileId: BigNumberish,
      followNFTURI: string,
      overrides?: CallOverrides
    ): Promise<void>;

    setFollowNFTURIWithSig(
      vars: DataTypes.SetFollowNFTURIWithSigDataStruct,
      overrides?: CallOverrides
    ): Promise<void>;

    setGovernance(
      newGovernance: string,
      overrides?: CallOverrides
    ): Promise<void>;

    setProfileImageURI(
      profileId: BigNumberish,
      imageURI: string,
      overrides?: CallOverrides
    ): Promise<void>;

    setProfileImageURIWithSig(
      vars: DataTypes.SetProfileImageURIWithSigDataStruct,
      overrides?: CallOverrides
    ): Promise<void>;

    setState(newState: BigNumberish, overrides?: CallOverrides): Promise<void>;

    whitelistCollectModule(
      collectModule: string,
      whitelist: boolean,
      overrides?: CallOverrides
    ): Promise<void>;

    whitelistFollowModule(
      followModule: string,
      whitelist: boolean,
      overrides?: CallOverrides
    ): Promise<void>;

    whitelistProfileCreator(
      profileCreator: string,
      whitelist: boolean,
      overrides?: CallOverrides
    ): Promise<void>;

    whitelistReferenceModule(
      referenceModule: string,
      whitelist: boolean,
      overrides?: CallOverrides
    ): Promise<void>;
  };

  filters: {};

  estimateGas: {
    collect(
      profileId: BigNumberish,
      pubId: BigNumberish,
      data: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    collectWithSig(
      vars: DataTypes.CollectWithSigDataStruct,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    comment(
      vars: DataTypes.CommentDataStruct,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    commentWithSig(
      vars: DataTypes.CommentWithSigDataStruct,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    createProfile(
      vars: DataTypes.CreateProfileDataStruct,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    defaultProfile(
      wallet: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    emitCollectNFTTransferEvent(
      profileId: BigNumberish,
      pubId: BigNumberish,
      collectNFTId: BigNumberish,
      from: string,
      to: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    emitFollowNFTTransferEvent(
      profileId: BigNumberish,
      followNFTId: BigNumberish,
      from: string,
      to: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    follow(
      profileIds: BigNumberish[],
      datas: BytesLike[],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    followWithSig(
      vars: DataTypes.FollowWithSigDataStruct,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    getCollectModule(
      profileId: BigNumberish,
      pubId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getCollectNFT(
      profileId: BigNumberish,
      pubId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getContentURI(
      profileId: BigNumberish,
      pubId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getDispatcher(
      profileId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getFollowModule(
      profileId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getFollowNFT(
      profileId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getFollowNFTURI(
      profileId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getGovernance(overrides?: CallOverrides): Promise<BigNumber>;

    getHandle(
      profileId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getProfile(
      profileId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getProfileIdByHandle(
      handle: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getPub(
      profileId: BigNumberish,
      pubId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getPubCount(
      profileId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getPubPointer(
      profileId: BigNumberish,
      pubId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getPubType(
      profileId: BigNumberish,
      pubId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getReferenceModule(
      profileId: BigNumberish,
      pubId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    initialize(
      name: string,
      symbol: string,
      newGovernance: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    isCollectModuleWhitelisted(
      collectModule: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    isFollowModuleWhitelisted(
      followModule: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    isProfileCreatorWhitelisted(
      profileCreator: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    isReferenceModuleWhitelisted(
      referenceModule: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    mirror(
      vars: DataTypes.MirrorDataStruct,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    mirrorWithSig(
      vars: DataTypes.MirrorWithSigDataStruct,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    post(
      vars: DataTypes.PostDataStruct,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    postWithSig(
      vars: DataTypes.PostWithSigDataStruct,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    setDefaultProfile(
      profileId: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    setDefaultProfileWithSig(
      vars: DataTypes.SetDefaultProfileWithSigDataStruct,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    setDispatcher(
      profileId: BigNumberish,
      dispatcher: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    setDispatcherWithSig(
      vars: DataTypes.SetDispatcherWithSigDataStruct,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    setEmergencyAdmin(
      newEmergencyAdmin: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    setFollowModule(
      profileId: BigNumberish,
      followModule: string,
      followModuleData: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    setFollowModuleWithSig(
      vars: DataTypes.SetFollowModuleWithSigDataStruct,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    setFollowNFTURI(
      profileId: BigNumberish,
      followNFTURI: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    setFollowNFTURIWithSig(
      vars: DataTypes.SetFollowNFTURIWithSigDataStruct,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    setGovernance(
      newGovernance: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    setProfileImageURI(
      profileId: BigNumberish,
      imageURI: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    setProfileImageURIWithSig(
      vars: DataTypes.SetProfileImageURIWithSigDataStruct,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    setState(
      newState: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    whitelistCollectModule(
      collectModule: string,
      whitelist: boolean,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    whitelistFollowModule(
      followModule: string,
      whitelist: boolean,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    whitelistProfileCreator(
      profileCreator: string,
      whitelist: boolean,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    whitelistReferenceModule(
      referenceModule: string,
      whitelist: boolean,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    collect(
      profileId: BigNumberish,
      pubId: BigNumberish,
      data: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    collectWithSig(
      vars: DataTypes.CollectWithSigDataStruct,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    comment(
      vars: DataTypes.CommentDataStruct,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    commentWithSig(
      vars: DataTypes.CommentWithSigDataStruct,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    createProfile(
      vars: DataTypes.CreateProfileDataStruct,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    defaultProfile(
      wallet: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    emitCollectNFTTransferEvent(
      profileId: BigNumberish,
      pubId: BigNumberish,
      collectNFTId: BigNumberish,
      from: string,
      to: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    emitFollowNFTTransferEvent(
      profileId: BigNumberish,
      followNFTId: BigNumberish,
      from: string,
      to: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    follow(
      profileIds: BigNumberish[],
      datas: BytesLike[],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    followWithSig(
      vars: DataTypes.FollowWithSigDataStruct,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    getCollectModule(
      profileId: BigNumberish,
      pubId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getCollectNFT(
      profileId: BigNumberish,
      pubId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getContentURI(
      profileId: BigNumberish,
      pubId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getDispatcher(
      profileId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getFollowModule(
      profileId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getFollowNFT(
      profileId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getFollowNFTURI(
      profileId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getGovernance(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    getHandle(
      profileId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getProfile(
      profileId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getProfileIdByHandle(
      handle: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getPub(
      profileId: BigNumberish,
      pubId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getPubCount(
      profileId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getPubPointer(
      profileId: BigNumberish,
      pubId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getPubType(
      profileId: BigNumberish,
      pubId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getReferenceModule(
      profileId: BigNumberish,
      pubId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    initialize(
      name: string,
      symbol: string,
      newGovernance: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    isCollectModuleWhitelisted(
      collectModule: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    isFollowModuleWhitelisted(
      followModule: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    isProfileCreatorWhitelisted(
      profileCreator: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    isReferenceModuleWhitelisted(
      referenceModule: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    mirror(
      vars: DataTypes.MirrorDataStruct,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    mirrorWithSig(
      vars: DataTypes.MirrorWithSigDataStruct,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    post(
      vars: DataTypes.PostDataStruct,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    postWithSig(
      vars: DataTypes.PostWithSigDataStruct,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    setDefaultProfile(
      profileId: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    setDefaultProfileWithSig(
      vars: DataTypes.SetDefaultProfileWithSigDataStruct,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    setDispatcher(
      profileId: BigNumberish,
      dispatcher: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    setDispatcherWithSig(
      vars: DataTypes.SetDispatcherWithSigDataStruct,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    setEmergencyAdmin(
      newEmergencyAdmin: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    setFollowModule(
      profileId: BigNumberish,
      followModule: string,
      followModuleData: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    setFollowModuleWithSig(
      vars: DataTypes.SetFollowModuleWithSigDataStruct,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    setFollowNFTURI(
      profileId: BigNumberish,
      followNFTURI: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    setFollowNFTURIWithSig(
      vars: DataTypes.SetFollowNFTURIWithSigDataStruct,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    setGovernance(
      newGovernance: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    setProfileImageURI(
      profileId: BigNumberish,
      imageURI: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    setProfileImageURIWithSig(
      vars: DataTypes.SetProfileImageURIWithSigDataStruct,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    setState(
      newState: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    whitelistCollectModule(
      collectModule: string,
      whitelist: boolean,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    whitelistFollowModule(
      followModule: string,
      whitelist: boolean,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    whitelistProfileCreator(
      profileCreator: string,
      whitelist: boolean,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    whitelistReferenceModule(
      referenceModule: string,
      whitelist: boolean,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;
  };
}
